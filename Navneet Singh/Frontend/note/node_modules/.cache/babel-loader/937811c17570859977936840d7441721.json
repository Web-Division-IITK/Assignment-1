{"ast":null,"code":"import { USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAILED } from \"./types\";\nimport axios from \"axios\";\nexport const loaduser = () => (dispatch, getState) => {\n  dispatch({\n    type: USER_LOADING\n  });\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  axios.get('/api/auth/user', config).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n};\nexport const signin = (username, password) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password\n  });\n  axios.post('/api/auth/login', body, config).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: LOGIN_FAILED\n    });\n  });\n};","map":{"version":3,"sources":["C:/dev/Assignment-1/Navneet Singh/Frontend/note/src/actions/authentication.js"],"names":["USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAILED","axios","loaduser","dispatch","getState","type","token","auth","config","headers","get","then","res","payload","data","catch","err","signin","username","password","body","JSON","stringify","post"],"mappings":"AAAA,SAASA,YAAT,EAAsBC,WAAtB,EAAkCC,UAAlC,EAA8CC,aAA9C,EAA6DC,YAA7D,QAAiF,SAAjF;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAC,MAAK,CAACC,QAAD,EAAUC,QAAV,KAAqB;AAC5CD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACT;AAAN,GAAD,CAAR;AAEA,QAAMU,KAAK,GAAEF,QAAQ,GAAGG,IAAX,CAAgBD,KAA7B;AACA,QAAME,MAAM,GAAE;AACVC,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ;AADE,GAAd;;AAKA,MAAGH,KAAH,EAAS;AACLE,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAiC,SAAQH,KAAM,EAA/C;AACH;;AAEDL,EAAAA,KAAK,CAACS,GAAN,CAAU,gBAAV,EAA4BF,MAA5B,EACCG,IADD,CACMC,GAAG,IAAG;AACRT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,WADD;AAELgB,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GAND,EAMGC,KANH,CAMSC,GAAG,IAAE;AACVb,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACP;AAAN,KAAD,CAAR;AACH,GARD;AASH,CAtBM;AAuBP,OAAO,MAAMmB,MAAM,GAAE,CAACC,QAAD,EAAUC,QAAV,KAAuBhB,QAAQ,IAAI;AAEpD,QAAMK,MAAM,GAAE;AACVC,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ;AADE,GAAd;AAKJ,QAAMW,IAAI,GAAEC,IAAI,CAACC,SAAL,CAAe;AAAEJ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAf,CAAZ;AAEIlB,EAAAA,KAAK,CAACsB,IAAN,CAAW,iBAAX,EAA6BH,IAA7B,EAAmCZ,MAAnC,EACCG,IADD,CACMC,GAAG,IAAG;AACRT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,aADD;AAELc,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GAND,EAMGC,KANH,CAMSC,GAAG,IAAE;AACVb,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACL;AAAN,KAAD,CAAR;AACH,GARD;AASH,CAlBM","sourcesContent":["import { USER_LOADING,USER_LOADED,AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAILED } from \"./types\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const loaduser=()=> (dispatch,getState)=>{\r\n    dispatch({type:USER_LOADING});\r\n\r\n    const token= getState().auth.token;\r\n    const config ={\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    if(token){\r\n        config.headers['Authorization']=`Token ${token}`;\r\n    }\r\n\r\n    axios.get('/api/auth/user', config)\r\n    .then(res =>{\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    }).catch(err=>{\r\n        dispatch({type:AUTH_ERROR});\r\n    });\r\n}\r\nexport const signin= (username,password) => dispatch => {\r\n\r\n    const config ={\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\nconst body= JSON.stringify({ username, password });\r\n\r\n    axios.post('/api/auth/login',body, config)\r\n    .then(res =>{\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    }).catch(err=>{\r\n        dispatch({type:LOGIN_FAILED});\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}